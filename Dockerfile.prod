# Lobsters
#
# VERSION latest
ARG BASE_IMAGE=ruby:3.3.6-alpine
FROM ${BASE_IMAGE}

# Create lobsters user and group with specific UID/GID to match Ansible config
RUN set -xe; \
    addgroup -g 1024 -S lobsters; \
    adduser -u 1024 -S -h /srv/lobste.rs -s /bin/bash -G lobsters lobsters;

# Create necessary directories
RUN set -xe; \
    mkdir -p /srv/lobste.rs/http \
           /srv/lobste.rs/log \
           /srv/lobste.rs/storage \
           /srv/lobste.rs/.ssh \
           /srv/lobste.rs/.bundle \
           /srv/lobste.rs/http/tmp \
           /srv/lobste.rs/http/tmp/cache \
           /srv/lobste.rs/run;

# Install needed runtime dependencies
RUN set -xe; \
    chown -R lobsters:lobsters /srv/lobste.rs; \
    chmod 755 /srv/lobste.rs; \
    chmod 755 /srv/lobste.rs/log; \
    chmod 755 /srv/lobste.rs/storage; \
    chmod 700 /srv/lobste.rs/.ssh; \
    chmod 755 /srv/lobste.rs/.bundle; \
    chmod 775 /srv/lobste.rs/http/tmp; \
    chmod 775 /srv/lobste.rs/http/tmp/cache; \
    chmod 755 /srv/lobste.rs/run; \
    apk add --no-cache --update --virtual .runtime-deps \
        mariadb-connector-c \
        bash \
        nodejs \
        npm \
        sqlite-libs \
        tzdata;

# Change shell to bash
SHELL ["/bin/bash", "-c"]

# Copy Gemfile to container
COPY --chown=lobsters:lobsters ./Gemfile ./Gemfile.lock /srv/lobste.rs/http/

ARG DEVELOPER_BUILD=false
RUN set -xe; \
    apk add --no-cache --virtual .build-deps \
        build-base \
        curl \
        gcc \
        git \
        gnupg \
        linux-headers \
        mariadb-connector-c-dev \
        mariadb-dev \
        sqlite-dev; \
    export PATH=/srv/lobste.rs/.gem/ruby/3.3.0/bin:$PATH; \
    export SUPATH=$PATH; \
    export GEM_HOME="/srv/lobste.rs/.gem"; \
    export GEM_PATH="/srv/lobste.rs/.gem"; \
    export BUNDLE_PATH="/srv/lobste.rs/.bundle"; \
    cd /srv/lobste.rs/http; \
    su lobsters -c "gem install bundler --user-install"; \
    su lobsters -c "gem update"; \
    su lobsters -c "gem install rake -v 13.2.1"; \
    su lobsters -c "bundle config set no-cache 'true'"; \
    su lobsters -c "bundle install"; \
    if [ "${DEVELOPER_BUILD,,}" != "true" ]; \
    then \
        apk del .build-deps; \
    fi; \
    mv /srv/lobste.rs/http/Gemfile /srv/lobste.rs/http/Gemfile.bak; \
    mv /srv/lobste.rs/http/Gemfile.lock /srv/lobste.rs/http/Gemfile.lock.bak;

# Copy lobsters into the container
COPY --chown=lobsters:lobsters ./ /srv/lobste.rs/http/

# Set proper permissions and move assets and configs
RUN set -xe; \
    mv /srv/lobste.rs/http/Gemfile.bak /srv/lobste.rs/http/Gemfile; \
    mv /srv/lobste.rs/http/Gemfile.lock.bak /srv/lobste.rs/http/Gemfile.lock; \
    chown -R lobsters:lobsters /srv/lobste.rs; \
    mv /srv/lobste.rs/http/docker-entrypoint.sh /usr/local/bin/; \
    chmod 755 /usr/local/bin/docker-entrypoint.sh;

# Drop down to unprivileged user
USER lobsters

# Set our working directory
WORKDIR /srv/lobste.rs/http/

# Build arguments
ARG VCS_REF
ARG BUILD_DATE
ARG VERSION

# Labels / Metadata
LABEL \
    org.opencontainers.image.authors="James Brink <brink.james@gmail.com>" \
    org.opencontainers.image.created="${BUILD_DATE}" \
    org.opencontainers.image.description="Lobsters Rails Project" \
    org.opencontainers.image.revision="${VCS_REF}" \
    org.opencontainers.image.source="https://github.com/utensils/docker-lobsters" \
    org.opencontainers.image.title="lobsters" \
    org.opencontainers.image.vendor="Utensils" \
    org.opencontainers.image.version="${VERSION}"

# Set environment variables
ENV MARIADB_HOST="mariadb" \
    MARIADB_PORT="3306" \
    MARIADB_PASSWORD="password" \
    MARIADB_USER="root" \
    LOBSTER_DATABASE="lobsters" \
    LOBSTER_HOSTNAME="localhost" \
    LOBSTER_SITE_NAME="Example News" \
    RAILS_ENV="development" \
    SECRET_KEY="" \
    GEM_HOME="/srv/lobste.rs/.gem" \
    GEM_PATH="/srv/lobste.rs/.gem" \
    BUNDLE_PATH="/srv/lobste.rs/.bundle" \
    EXCEPTION_SENDER_ADDRESS="no-reply@example.com" \
    RAILS_MAX_THREADS="5" \
    MAILER_DELIVERY_METHOD="smtp" \
    RAILS_SERVE_STATIC_FILES="true" \
    SMTP_HOST="127.0.0.1" \
    SMTP_PORT="465" \
    SMTP_STARTTLS_AUTO="false" \
    SMTP_USERNAME="lobsters" \
    SMTP_PASSWORD="lobsters" \
    RAILS_LOG_TO_STDOUT="1" \
    PATH="/srv/lobste.rs/.gem/ruby/3.3.0/bin:$PATH"

RUN ln -sf /dev/stdout /srv/lobste.rs/log/production.log

# Expose HTTP port
EXPOSE 3000

# Execute our entry script
CMD ["/usr/local/bin/docker-entrypoint.sh"]
